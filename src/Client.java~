import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class Client {
    private static BufferedReader consoleReader = new BufferedReader(new InputStreamReader(System.in));
    private static BufferedReader in;
    private static PrintWriter out;
    // Shared flag indicating that the server confirmed disconnection.
    private static volatile boolean shouldDisconnect = false;

    public static void main(String[] args) {
        try {
            System.out.print("Enter server IP (default localhost): ");
            String ip = consoleReader.readLine();
            if (ip.isEmpty()) {
                ip = "localhost";
            }

            Socket socket = new Socket(ip, 12345);
            in  = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            out = new PrintWriter(socket.getOutputStream(), true);

            // Start thread to listen for messages from the server.
            Thread listenerThread = new Thread(() -> {
                try {
                    String response;
                    while ((response = in.readLine()) != null) {
                        System.out.println("SERVER: " + response);
                    }
                } catch(IOException e) {
                    System.out.println("Disconnected from server.");
                }
            });
            listenerThread.start();

            // Authentication process
            String userType = null;
            while (userType == null) {
                System.out.println("Do you want to (1) Login or (2) Register?");
                String choice = consoleReader.readLine();

                if (choice.equals("2")) {
                    // Registration
                    System.out.print("Enter username: ");
                    String username = consoleReader.readLine();
                    System.out.print("Enter password: ");
                    String password = consoleReader.readLine();
                    System.out.print("Enter type (customer/driver/admin): ");
                    String type = consoleReader.readLine();
                    out.println("REGISTER:" + username + ":" + password + ":" + type);
                } else {
                    // Login
                    System.out.print("Enter username: ");
                    String username = consoleReader.readLine();
                    System.out.print("Enter password: ");
                    String password = consoleReader.readLine();
                    out.println("LOGIN:" + username + ":" + password);
                }

                // Read server response
                String serverResponse = in.readLine();
                System.out.println("SERVER: " + serverResponse);

                // Check for successful login or registration
                if (serverResponse.startsWith("LOGGEDIN:")) {
                    userType = serverResponse.split(":")[2].toLowerCase();
                } else if (serverResponse.startsWith("REGISTERED:")) {
                    continue; // Go back to login
                }
            }

            // Main menu loop
            while (!shouldDisconnect) {
                if (userType.equals("customer")) {
                    System.out.println("\nCustomer Menu:");
                    System.out.println("1. Request a Ride");
                    System.out.println("2. Assign a Ride (choose an offer)");
                    System.out.println("3. Rate a Driver");
                    System.out.println("4. Disconnect");
                    System.out.print("Choice: ");
                    String input = consoleReader.readLine();

                    switch (input) {
                        case "1":
                            System.out.print("Enter pickup location: ");
                            String pickup = consoleReader.readLine();
                            System.out.print("Enter destination: ");
                            String destination = consoleReader.readLine();
                            out.println("REQUEST:" + pickup + ":" + destination);
                            break;
                        case "2":
                            System.out.print("Enter Ride ID: ");
                            String rideId = consoleReader.readLine();
                            System.out.print("Enter chosen driver username: ");
                            String driverUser = consoleReader.readLine();
                            out.println("ASSIGN:" + rideId + ":" + driverUser);
                            break;
                        case "3":
                            System.out.print("Enter Ride ID to rate: ");
                            rideId = consoleReader.readLine();
                            System.out.print("Enter behaviour rating (1-5): ");
                            String behaviourRating = consoleReader.readLine();
                            System.out.print("Enter car rating (1-5): ");
                            String carRating = consoleReader.readLine();
                            System.out.print("Enter ride rating (1-5): ");
                            String rideRating = consoleReader.readLine();
                            System.out.print("Enter comment: ");
                            String comment = consoleReader.readLine();
                            out.println("RATE:" + rideId + ":" + behaviourRating + ":" + carRating + ":" + rideRating + ":" + comment);
                            break;
                        case "4":
                            out.println("DISCONNECT");
                            shouldDisconnect = true;
                            break;
                        default:
                            System.out.println("Invalid option.");
                    }
                } else if (userType.equals("driver")) {
                    System.out.println("\nDriver Menu:");
                    System.out.println("1. Send Offer for a Ride");
                    System.out.println("2. Update Ride Status (START/END)");
                    System.out.println("3. Disconnect");
                    System.out.print("Choice: ");
                    String input = consoleReader.readLine();

                    switch (input) {
                        case "1":
                            System.out.print("Enter Ride ID to offer: ");
                            String rideId = consoleReader.readLine();
                            System.out.print("Enter your fare offer: ");
                            String price = consoleReader.readLine();
                            out.println("OFFER:" + rideId + ":" + price);
                            break;
                        case "2":
                            System.out.print("Enter Ride ID to update: ");
                            rideId = consoleReader.readLine();
                            System.out.print("Enter status (START/END): ");
                            String status = consoleReader.readLine();
                            out.println("UPDATE:" + rideId + ":" + status);
                            break;
                        case "3":
                            out.println("DISCONNECT");
                            shouldDisconnect = true;
                            break;
                        default:
                            System.out.println("Invalid option.");
                    }
                } else if (userType.equals("admin")) {
                    System.out.println("\nAdmin Menu:");
                    System.out.println("1. View System Statistics");
                    System.out.println("2. Disconnect");
                    System.out.print("Choice: ");
                    String input = consoleReader.readLine();

                    switch (input) {
                        case "1":
                            out.println("STATS");
                            break;
                        case "2":
                            out.println("DISCONNECT");
                            shouldDisconnect = true;
                            break;
                        default:
                            System.out.println("Invalid option.");
                    }
                }
            }

            System.out.println("Disconnecting...");
            socket.close();
        } catch (IOException e) {
            System.err.println("Client error: " + e.getMessage());
        }
    }
}